name: 🚀 Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download pnpm
        uses: pnpm/action-setup@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔬 Lint
        run: pnpm lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download pnpm
        uses: pnpm/action-setup@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🔎 Type check
        run: pnpm typecheck

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Download pnpm
        uses: pnpm/action-setup@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⚡ Run vitest
        run: pnpm test -- --coverage

  playwright:
    name: 🎭 Playwright
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 📥 Download pnpm
        uses: pnpm/action-setup@v2

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 📥 Install Playwright Browsers
        run: pnpm test:e2e:install

      - name: 🎭 Playwright tests
        run: pnpm test:e2e:run

      - name: 📊 Upload report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, typecheck, vitest, playwright]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: superfly/flyctl-actions@1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.4
        with:
          args: deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
